{"version":3,"names":["OuterScrollState","ScrollDir","useAutoScroll","outerScrollRef","outerScrollOffset","pointerY","activeKey","pointerType","innerAnimatedRef","useRefs","flatlistRef","useProps","autoscrollThreshold","DEFAULT_PROPS","autoscrollSpeed","useAnimatedValues","scrollOffset","scrollViewSize","containerSize","activeCellSize","hoverOffset","activeIndexAnim","hoverScreenOffset","useDerivedValue","value","isScrolledUp","SCROLL_POSITION_TOLERANCE","isScrolledDown","distToTopEdge","Math","max","distToBottomEdge","hoverPlus","isAtTopEdge","isAtBottomEdge","scrollTarget","useSharedValue","dragActive","useAnimatedReaction","cur","prev","shouldScrollInner","diff","abs","reached","atEdge","blocked","dist","pct","delta","next","min","scrollTo","outerState","Idle","outerTopY","outerBottomY","attemptedOff","lastDir","None","useEffect","node","current","setScrollEnabled","enabled","setNativeProps","scrollEnabled","style","el","overflowY","overscrollBehavior","locked","measure","measureInWindow","_","y","__","h","dimSub","Dimensions","addEventListener","ro","isWeb","window","ResizeObserver","ROs","observe","remove","disconnect","Up","Down","dir","moved"],"sources":["useAutoScroll.tsx"],"sourcesContent":["/* --------------------------------------------------------------------------\n * useAutoScroll Hook\n * ----------------------------------------------------------------------------\n * Adds auto‑scrolling behaviour for both the inner FlatList and an optional\n * outer ScrollView while a drag‑and‑drop gesture is active.\n *\n * ‑ Inner auto‑scroll keeps the FlatList itself moving when the item being\n *   dragged approaches the top / bottom edge of the visible list.\n * ‑ Outer auto‑scroll scrolls a parent ScrollView (e.g. a screen that contains\n *   the list) when the pointer nears the viewport edges.\n *\n * The hook intentionally **does not** mutate any functional behaviour of the\n * passed components – it merely listens to animated values and triggers\n * imperative `scrollTo` calls when needed.\n *\n * NOTE:  All comments are in English (as requested) and the runtime code is\n *        left untouched – only documentation and formatting have been added.\n * ------------------------------------------------------------------------- */\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Imports\n// ─────────────────────────────────────────────────────────────────────────────\n\n// React / React‑Native basics\nimport { useEffect } from \"react\";\nimport { Dimensions } from \"react-native\";\n\n// Reanimated primitives\nimport {\n  scrollTo,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\n// Project constants & helpers\nimport {\n  DEFAULT_PROPS,\n  SCROLL_POSITION_TOLERANCE,\n  isWeb,\n} from \"../constants\";\n\n// Custom context hooks\nimport { useProps } from \"../context/propsContext\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useRefs } from \"../context/refContext\";\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Type helpers\n// ─────────────────────────────────────────────────────────────────────────────\n\n/** Convenience alias for a Reanimated SharedValue */\n// prettier‑ignore\n// eslint‑disable-next-line @typescript-eslint/consistent-type-definitions\ntype SV<T> = import(\"react-native-reanimated\").SharedValue<T>;\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Enums – no more magic numbers ✨\n// ─────────────────────────────────────────────────────────────────────────────\n\n/**\n * Internal state for the outer auto‑scroll machine\n */\nenum OuterScrollState {\n  Idle = 0,  // not scrolling\n  Up = 1,    // scrolling up\n  Down = 2,  // scrolling down\n}\n\n/**\n * Simple direction helper for comparisons\n */\nenum ScrollDir {\n  None = 0,\n  Up = -1,\n  Down = 1,\n}\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Hook\n// ─────────────────────────────────────────────────────────────────────────────\n\n/**\n * Adds automated scroll behaviour while a drag gesture is active.\n *\n * @param outerScrollRef   Ref to an optional parent ScrollView / FlashList\n * @param outerScrollOffset SharedValue containing the outer scroll y‑offset\n * @param pointerY         SharedValue holding the global pointer y‑position\n * @param activeKey        Currently picked key / id (null when idle)\n * @param pointerType      0 = touch, 1 = pen, 2 = mouse (see PointerEvent)\n * @param innerAnimatedRef Animated ref returned by Reanimated‑enabled FlatList\n */\nexport function useAutoScroll(\n  outerScrollRef?: any,\n  outerScrollOffset?: SV<any>,\n  pointerY?: SV<any>,\n  activeKey?: any,\n  pointerType?: SV<any>,\n  innerAnimatedRef?: any,\n) {\n  /* ------------------------------------------------------------------------ */\n  /* 1) Contexts & constants                                                  */\n  /* ------------------------------------------------------------------------ */\n\n  // Legacy ref for backward compatibility (some users still rely on it)\n  const { flatlistRef } = useRefs();\n\n  // Component‑level props (with sensible fallbacks)\n  const {\n    autoscrollThreshold = DEFAULT_PROPS.autoscrollThreshold,\n    autoscrollSpeed = DEFAULT_PROPS.autoscrollSpeed,\n  } = useProps();\n\n  // Continuously updated animated values provided by <DraggableFlatList />\n  const {\n    scrollOffset,    // current y‑scroll offset of the FlatList\n    scrollViewSize,  // content height of the FlatList\n    containerSize,   // height of the visible viewport\n    activeCellSize,  // height of the row that is being dragged\n    hoverOffset,     // y‑coordinate of the hover component in list coords\n    activeIndexAnim, // index of the currently active cell (‑1 when idle)\n  } = useAnimatedValues();\n\n  /* ========================================================================= */\n  /*  A) Inner auto‑scroll  (scroll the FlatList itself)                        */\n  /* ========================================================================= */\n\n  // Hover offset converted from list‑coords to screen‑coords\n  const hoverScreenOffset = useDerivedValue(() =>\n    hoverOffset.value - scrollOffset.value,\n  );\n\n  // Has the list already reached its very top / bottom?\n  const isScrolledUp = useDerivedValue(\n    () => scrollOffset.value - SCROLL_POSITION_TOLERANCE <= 0,\n  );\n\n  const isScrolledDown = useDerivedValue(\n    () =>\n      scrollOffset.value +\n        containerSize.value +\n        SCROLL_POSITION_TOLERANCE >=\n      scrollViewSize.value,\n  );\n\n  // Distance from hover component to each edge of the viewport\n  const distToTopEdge = useDerivedValue(() => Math.max(0, hoverScreenOffset.value));\n\n  const distToBottomEdge = useDerivedValue(() => {\n    const hoverPlus = hoverScreenOffset.value + activeCellSize.value;\n    return Math.max(0, containerSize.value - hoverPlus);\n  });\n\n  // Is the hover component within the autoscroll threshold region?\n  const isAtTopEdge = useDerivedValue(\n    () => distToTopEdge.value <= autoscrollThreshold,\n  );\n\n  const isAtBottomEdge = useDerivedValue(\n    () => distToBottomEdge.value <= autoscrollThreshold,\n  );\n\n  // Mutable shared value that we keep chasing via scrollTo\n  const scrollTarget = useSharedValue(0);\n\n  // Is a drag currently happening?\n  const dragActive = useDerivedValue(() => activeIndexAnim.value >= 0);\n\n  // Whenever a drag starts, reset scrollTarget to the current offset\n  useAnimatedReaction(\n    () => dragActive.value,\n    (cur, prev) => {\n      if (cur && !prev) scrollTarget.value = scrollOffset.value;\n    },\n  );\n\n  // Do we need to perform an inner scroll on this frame?\n  const shouldScrollInner = useDerivedValue(() => {\n    const diff = Math.abs(scrollTarget.value - scrollOffset.value);\n    const reached = diff < SCROLL_POSITION_TOLERANCE;\n    const atEdge = isAtTopEdge.value || isAtBottomEdge.value;\n    const blocked =\n      (isAtTopEdge.value && isScrolledUp.value) ||\n      (isAtBottomEdge.value && isScrolledDown.value);\n\n    return reached && atEdge && !blocked && dragActive.value;\n  });\n\n  // ──────────────────────────────────────────────────────────────────────────\n  // Throttled, momentum‑friendly scroll‑to for the inner list\n  // ──────────────────────────────────────────────────────────────────────────\n\n  useDerivedValue(() => {\n    if (!shouldScrollInner.value) return;\n    if (!innerAnimatedRef) return;\n\n    // How deep into the threshold did we move? (0‑1)\n    const dist = isAtTopEdge.value ? distToTopEdge.value : distToBottomEdge.value;\n    const pct = 1 - dist / autoscrollThreshold;\n\n    // Map that percentage to a delta value\n    const delta = pct * autoscrollSpeed;\n\n    // Calculate the next y‑offset based on direction\n    const next = isAtTopEdge.value\n      ? Math.max(0, scrollOffset.value - delta)\n      : Math.min(\n          scrollOffset.value + delta,\n          scrollViewSize.value - containerSize.value,\n        );\n\n    // Persist & apply the scroll\n    scrollTarget.value = next;\n    scrollTo(innerAnimatedRef, 0, next, false); // animated:false => we drive frames manually\n    scrollOffset.value = next; // keep shared value in sync to avoid jumps\n  });\n\n  /* ========================================================================= */\n  /*  B) Outer auto‑scroll  (scroll the parent container)                       */\n  /* ========================================================================= */\n\n  // Early‑out: nothing to do if no outer ref or animated offset provided\n  if (!outerScrollRef || !outerScrollOffset) return;\n\n  // Shared values to keep track of state & geometry\n  const outerState = useSharedValue<OuterScrollState>(OuterScrollState.Idle);\n  const outerTopY = useSharedValue(0);\n  const outerBottomY = useSharedValue(0);\n  const attemptedOff = useSharedValue(0);\n  const lastDir = useSharedValue<ScrollDir>(ScrollDir.None);\n\n  /* ---------------------- 1) Temporarily disable parent scroll ------------ */\n\n  useEffect(() => {\n    const node = outerScrollRef?.current;\n    if (!node || pointerType?.value === 2) return; // keep mouse wheel enabled\n\n    // Generic helper that works for RN & Web\n    const setScrollEnabled = (enabled: boolean) => {\n      if (typeof (node as any).setNativeProps === \"function\") {\n        (node as any).setNativeProps({ scrollEnabled: enabled });\n        //@ts-ignore\n      } else if ((node as HTMLElement).style) {\n        const el = node as HTMLElement;\n        //@ts-ignore\n        el.style.overflowY = enabled ? \"auto\" : \"hidden\";\n        //@ts-ignore\n        el.style.overscrollBehavior = enabled ? \"auto\" : \"contain\";\n      }\n    };\n\n    const locked = activeKey != null;\n    setScrollEnabled(!locked);\n\n    // Cleanup – always re‑enable scrolling on unmount / key change\n    return () => {\n      setScrollEnabled(true);\n    };\n  }, [activeKey, outerScrollRef, pointerType]);\n\n  /* ---------------------- 2) Observe outer bounds & resize ---------------- */\n\n  useEffect(() => {\n    if (!outerScrollRef?.current) return;\n\n    const measure = () => {\n      // @ts-ignore\n      outerScrollRef.current?.measureInWindow((_, y, __, h) => {\n        outerTopY.value = y;\n        outerBottomY.value = y + h;\n      });\n    };\n\n    // Initial measurement\n    measure();\n\n    // React‑Native: listen to orientation / window changes\n    const dimSub = Dimensions.addEventListener(\"change\", measure);\n\n    // Web: ResizeObserver for layout shifts\n    let ro: any;\n    // @ts-ignore\n    if (isWeb && typeof window !== \"undefined\" && (window as any).ResizeObserver) {\n      const el = outerScrollRef.current as HTMLElement;\n      //@ts-ignore – Type narrowing for older RN types\n      const ROs = (window as any).ResizeObserver;\n      ro = new ROs(measure);\n      ro.observe(el);\n    }\n\n    return () => {\n      dimSub.remove();\n      ro?.disconnect();\n    };\n  }, [outerScrollRef]);\n\n  /* ---------------------- 3) Decide when to scroll parent ----------------- */\n\n  useDerivedValue(() => {\n    const y = pointerY?.value;\n    if (y == null || activeKey == null) {\n      outerState.value = OuterScrollState.Idle;\n      return;\n    }\n\n    if (y < outerTopY.value + autoscrollThreshold) {\n      outerState.value = OuterScrollState.Up;\n    } else if (y > outerBottomY.value - autoscrollThreshold) {\n      outerState.value = OuterScrollState.Down;\n    } else {\n      outerState.value = OuterScrollState.Idle;\n    }\n  });\n\n  /* ---------------------- 4) Perform the parent scroll -------------------- */\n\n  useDerivedValue(() => {\n    if (\n      outerState.value === OuterScrollState.Idle ||\n      activeKey == null ||\n      pointerY?.value == null\n    )\n      return;\n\n    // Distance from pointer to triggering edge\n    const dist =\n      outerState.value === OuterScrollState.Up\n        ? pointerY.value - outerTopY.value\n        : outerBottomY.value - pointerY.value;\n\n    const pct = 1 - dist / autoscrollThreshold;\n    if (pct <= 0) return;\n\n    const dir =\n      outerState.value === OuterScrollState.Up ? ScrollDir.Up : ScrollDir.Down;\n    const delta = pct * autoscrollSpeed * dir;\n\n    attemptedOff.value = outerScrollOffset.value + delta; // local only → low bridge traffic\n    lastDir.value = dir;\n\n    scrollTo(outerScrollRef, 0, attemptedOff.value, false);\n  });\n\n  /* ---------------------- 5) Stop when the end is reached ----------------- */\n\n  useAnimatedReaction(\n    () => outerScrollOffset.value,\n    (cur, prev) => {\n      if (outerState.value === OuterScrollState.Idle || prev == null) return;\n      const moved =\n        lastDir.value === ScrollDir.Down ? cur > prev : cur < prev;\n      if (!moved) outerState.value = OuterScrollState.Idle;\n    },\n  );\n}\n"],"mappings":"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"}