{"version":3,"names":["useEffect","Dimensions","scrollTo","useAnimatedReaction","useDerivedValue","useSharedValue","DEFAULT_PROPS","SCROLL_POSITION_TOLERANCE","isWeb","useProps","useAnimatedValues","useRefs","OuterScrollState","ScrollDir","useAutoScroll","outerScrollRef","outerScrollOffset","pointerY","activeKey","pointerType","innerAnimatedRef","flatlistRef","autoscrollThreshold","autoscrollSpeed","scrollOffset","scrollViewSize","containerSize","activeCellSize","hoverOffset","activeIndexAnim","hoverScreenOffset","value","isScrolledUp","isScrolledDown","distToTopEdge","Math","max","distToBottomEdge","hoverPlus","isAtTopEdge","isAtBottomEdge","scrollTarget","dragActive","cur","prev","shouldScrollInner","diff","abs","reached","atEdge","blocked","dist","pct","delta","next","min","outerState","Idle","outerTopY","outerBottomY","attemptedOff","lastDir","None","node","current","setScrollEnabled","enabled","setNativeProps","scrollEnabled","style","el","overflowY","overscrollBehavior","locked","measure","measureInWindow","_","y","__","h","dimSub","addEventListener","ro","window","ResizeObserver","ROs","observe","remove","disconnect","Up","Down","dir","moved"],"sources":["useAutoScroll.tsx"],"sourcesContent":["/* --------------------------------------------------------------------------\n * useAutoScroll Hook\n * ----------------------------------------------------------------------------\n * Adds auto‑scrolling behaviour for both the inner FlatList and an optional\n * outer ScrollView while a drag‑and‑drop gesture is active.\n *\n * ‑ Inner auto‑scroll keeps the FlatList itself moving when the item being\n *   dragged approaches the top / bottom edge of the visible list.\n * ‑ Outer auto‑scroll scrolls a parent ScrollView (e.g. a screen that contains\n *   the list) when the pointer nears the viewport edges.\n *\n * The hook intentionally **does not** mutate any functional behaviour of the\n * passed components – it merely listens to animated values and triggers\n * imperative `scrollTo` calls when needed.\n *\n * NOTE:  All comments are in English (as requested) and the runtime code is\n *        left untouched – only documentation and formatting have been added.\n * ------------------------------------------------------------------------- */\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Imports\n// ─────────────────────────────────────────────────────────────────────────────\n\n// React / React‑Native basics\nimport { useEffect } from \"react\";\nimport { Dimensions } from \"react-native\";\n\n// Reanimated primitives\nimport {\n  scrollTo,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\n// Project constants & helpers\nimport {\n  DEFAULT_PROPS,\n  SCROLL_POSITION_TOLERANCE,\n  isWeb,\n} from \"../constants\";\n\n// Custom context hooks\nimport { useProps } from \"../context/propsContext\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useRefs } from \"../context/refContext\";\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Type helpers\n// ─────────────────────────────────────────────────────────────────────────────\n\n/** Convenience alias for a Reanimated SharedValue */\n// prettier‑ignore\n// eslint‑disable-next-line @typescript-eslint/consistent-type-definitions\ntype SV<T> = import(\"react-native-reanimated\").SharedValue<T>;\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Enums – no more magic numbers ✨\n// ─────────────────────────────────────────────────────────────────────────────\n\n/**\n * Internal state for the outer auto‑scroll machine\n */\nenum OuterScrollState {\n  Idle = 0,  // not scrolling\n  Up = 1,    // scrolling up\n  Down = 2,  // scrolling down\n}\n\n/**\n * Simple direction helper for comparisons\n */\nenum ScrollDir {\n  None = 0,\n  Up = -1,\n  Down = 1,\n}\n\n// ─────────────────────────────────────────────────────────────────────────────\n// Hook\n// ─────────────────────────────────────────────────────────────────────────────\n\n/**\n * Adds automated scroll behaviour while a drag gesture is active.\n *\n * @param outerScrollRef   Ref to an optional parent ScrollView / FlashList\n * @param outerScrollOffset SharedValue containing the outer scroll y‑offset\n * @param pointerY         SharedValue holding the global pointer y‑position\n * @param activeKey        Currently picked key / id (null when idle)\n * @param pointerType      0 = touch, 1 = pen, 2 = mouse (see PointerEvent)\n * @param innerAnimatedRef Animated ref returned by Reanimated‑enabled FlatList\n */\nexport function useAutoScroll(\n  outerScrollRef?: any,\n  outerScrollOffset?: SV<any>,\n  pointerY?: SV<any>,\n  activeKey?: any,\n  pointerType?: SV<any>,\n  innerAnimatedRef?: any,\n) {\n  /* ------------------------------------------------------------------------ */\n  /* 1) Contexts & constants                                                  */\n  /* ------------------------------------------------------------------------ */\n\n  // Legacy ref for backward compatibility (some users still rely on it)\n  const { flatlistRef } = useRefs();\n\n  // Component‑level props (with sensible fallbacks)\n  const {\n    autoscrollThreshold = DEFAULT_PROPS.autoscrollThreshold,\n    autoscrollSpeed = DEFAULT_PROPS.autoscrollSpeed,\n  } = useProps();\n\n  // Continuously updated animated values provided by <DraggableFlatList />\n  const {\n    scrollOffset,    // current y‑scroll offset of the FlatList\n    scrollViewSize,  // content height of the FlatList\n    containerSize,   // height of the visible viewport\n    activeCellSize,  // height of the row that is being dragged\n    hoverOffset,     // y‑coordinate of the hover component in list coords\n    activeIndexAnim, // index of the currently active cell (‑1 when idle)\n  } = useAnimatedValues();\n\n  /* ========================================================================= */\n  /*  A) Inner auto‑scroll  (scroll the FlatList itself)                        */\n  /* ========================================================================= */\n\n  // Hover offset converted from list‑coords to screen‑coords\n  const hoverScreenOffset = useDerivedValue(() =>\n    hoverOffset.value - scrollOffset.value,\n  );\n\n  // Has the list already reached its very top / bottom?\n  const isScrolledUp = useDerivedValue(\n    () => scrollOffset.value - SCROLL_POSITION_TOLERANCE <= 0,\n  );\n\n  const isScrolledDown = useDerivedValue(\n    () =>\n      scrollOffset.value +\n        containerSize.value +\n        SCROLL_POSITION_TOLERANCE >=\n      scrollViewSize.value,\n  );\n\n  // Distance from hover component to each edge of the viewport\n  const distToTopEdge = useDerivedValue(() => Math.max(0, hoverScreenOffset.value));\n\n  const distToBottomEdge = useDerivedValue(() => {\n    const hoverPlus = hoverScreenOffset.value + activeCellSize.value;\n    return Math.max(0, containerSize.value - hoverPlus);\n  });\n\n  // Is the hover component within the autoscroll threshold region?\n  const isAtTopEdge = useDerivedValue(\n    () => distToTopEdge.value <= autoscrollThreshold,\n  );\n\n  const isAtBottomEdge = useDerivedValue(\n    () => distToBottomEdge.value <= autoscrollThreshold,\n  );\n\n  // Mutable shared value that we keep chasing via scrollTo\n  const scrollTarget = useSharedValue(0);\n\n  // Is a drag currently happening?\n  const dragActive = useDerivedValue(() => activeIndexAnim.value >= 0);\n\n  // Whenever a drag starts, reset scrollTarget to the current offset\n  useAnimatedReaction(\n    () => dragActive.value,\n    (cur, prev) => {\n      if (cur && !prev) scrollTarget.value = scrollOffset.value;\n    },\n  );\n\n  // Do we need to perform an inner scroll on this frame?\n  const shouldScrollInner = useDerivedValue(() => {\n    const diff = Math.abs(scrollTarget.value - scrollOffset.value);\n    const reached = diff < SCROLL_POSITION_TOLERANCE;\n    const atEdge = isAtTopEdge.value || isAtBottomEdge.value;\n    const blocked =\n      (isAtTopEdge.value && isScrolledUp.value) ||\n      (isAtBottomEdge.value && isScrolledDown.value);\n\n    return reached && atEdge && !blocked && dragActive.value;\n  });\n\n  // ──────────────────────────────────────────────────────────────────────────\n  // Throttled, momentum‑friendly scroll‑to for the inner list\n  // ──────────────────────────────────────────────────────────────────────────\n\n  useDerivedValue(() => {\n    if (!shouldScrollInner.value) return;\n    if (!innerAnimatedRef) return;\n\n    // How deep into the threshold did we move? (0‑1)\n    const dist = isAtTopEdge.value ? distToTopEdge.value : distToBottomEdge.value;\n    const pct = 1 - dist / autoscrollThreshold;\n\n    // Map that percentage to a delta value\n    const delta = pct * autoscrollSpeed;\n\n    // Calculate the next y‑offset based on direction\n    const next = isAtTopEdge.value\n      ? Math.max(0, scrollOffset.value - delta)\n      : Math.min(\n          scrollOffset.value + delta,\n          scrollViewSize.value - containerSize.value,\n        );\n\n    // Persist & apply the scroll\n    scrollTarget.value = next;\n    scrollTo(innerAnimatedRef, 0, next, false); // animated:false => we drive frames manually\n    scrollOffset.value = next; // keep shared value in sync to avoid jumps\n  });\n\n  /* ========================================================================= */\n  /*  B) Outer auto‑scroll  (scroll the parent container)                       */\n  /* ========================================================================= */\n\n  // Early‑out: nothing to do if no outer ref or animated offset provided\n  if (!outerScrollRef || !outerScrollOffset) return;\n\n  // Shared values to keep track of state & geometry\n  const outerState = useSharedValue<OuterScrollState>(OuterScrollState.Idle);\n  const outerTopY = useSharedValue(0);\n  const outerBottomY = useSharedValue(0);\n  const attemptedOff = useSharedValue(0);\n  const lastDir = useSharedValue<ScrollDir>(ScrollDir.None);\n\n  /* ---------------------- 1) Temporarily disable parent scroll ------------ */\n\n  useEffect(() => {\n    const node = outerScrollRef?.current;\n    if (!node || pointerType?.value === 2) return; // keep mouse wheel enabled\n\n    // Generic helper that works for RN & Web\n    const setScrollEnabled = (enabled: boolean) => {\n      if (typeof (node as any).setNativeProps === \"function\") {\n        (node as any).setNativeProps({ scrollEnabled: enabled });\n        //@ts-ignore\n      } else if ((node as HTMLElement).style) {\n        const el = node as HTMLElement;\n        //@ts-ignore\n        el.style.overflowY = enabled ? \"auto\" : \"hidden\";\n        //@ts-ignore\n        el.style.overscrollBehavior = enabled ? \"auto\" : \"contain\";\n      }\n    };\n\n    const locked = activeKey != null;\n    setScrollEnabled(!locked);\n\n    // Cleanup – always re‑enable scrolling on unmount / key change\n    return () => {\n      setScrollEnabled(true);\n    };\n  }, [activeKey, outerScrollRef, pointerType]);\n\n  /* ---------------------- 2) Observe outer bounds & resize ---------------- */\n\n  useEffect(() => {\n    if (!outerScrollRef?.current) return;\n\n    const measure = () => {\n      // @ts-ignore\n      outerScrollRef.current?.measureInWindow((_, y, __, h) => {\n        outerTopY.value = y;\n        outerBottomY.value = y + h;\n      });\n    };\n\n    // Initial measurement\n    measure();\n\n    // React‑Native: listen to orientation / window changes\n    const dimSub = Dimensions.addEventListener(\"change\", measure);\n\n    // Web: ResizeObserver for layout shifts\n    let ro: any;\n    // @ts-ignore\n    if (isWeb && typeof window !== \"undefined\" && (window as any).ResizeObserver) {\n      const el = outerScrollRef.current as HTMLElement;\n      //@ts-ignore – Type narrowing for older RN types\n      const ROs = (window as any).ResizeObserver;\n      ro = new ROs(measure);\n      ro.observe(el);\n    }\n\n    return () => {\n      dimSub.remove();\n      ro?.disconnect();\n    };\n  }, [outerScrollRef]);\n\n  /* ---------------------- 3) Decide when to scroll parent ----------------- */\n\n  useDerivedValue(() => {\n    const y = pointerY?.value;\n    if (y == null || activeKey == null) {\n      outerState.value = OuterScrollState.Idle;\n      return;\n    }\n\n    if (y < outerTopY.value + autoscrollThreshold) {\n      outerState.value = OuterScrollState.Up;\n    } else if (y > outerBottomY.value - autoscrollThreshold) {\n      outerState.value = OuterScrollState.Down;\n    } else {\n      outerState.value = OuterScrollState.Idle;\n    }\n  });\n\n  /* ---------------------- 4) Perform the parent scroll -------------------- */\n\n  useDerivedValue(() => {\n    if (\n      outerState.value === OuterScrollState.Idle ||\n      activeKey == null ||\n      pointerY?.value == null\n    )\n      return;\n\n    // Distance from pointer to triggering edge\n    const dist =\n      outerState.value === OuterScrollState.Up\n        ? pointerY.value - outerTopY.value\n        : outerBottomY.value - pointerY.value;\n\n    const pct = 1 - dist / autoscrollThreshold;\n    if (pct <= 0) return;\n\n    const dir =\n      outerState.value === OuterScrollState.Up ? ScrollDir.Up : ScrollDir.Down;\n    const delta = pct * autoscrollSpeed * dir;\n\n    attemptedOff.value = outerScrollOffset.value + delta; // local only → low bridge traffic\n    lastDir.value = dir;\n\n    scrollTo(outerScrollRef, 0, attemptedOff.value, false);\n  });\n\n  /* ---------------------- 5) Stop when the end is reached ----------------- */\n\n  useAnimatedReaction(\n    () => outerScrollOffset.value,\n    (cur, prev) => {\n      if (outerState.value === OuterScrollState.Idle || prev == null) return;\n      const moved =\n        lastDir.value === ScrollDir.Down ? cur > prev : cur < prev;\n      if (!moved) outerState.value = OuterScrollState.Idle;\n    },\n  );\n}\n"],"mappings":"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"}